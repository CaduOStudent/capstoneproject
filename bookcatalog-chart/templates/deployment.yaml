apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { include "bookcatalog-chart.fullname" . } }
  labels:
    app.kubernetes.io/name: { { include "bookcatalog-chart.name" . } }
    app.kubernetes.io/instance: { { .Release.Name } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app.kubernetes.io/name: { { include "bookcatalog-chart.name" . } }
      app.kubernetes.io/instance: { { .Release.Name } }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: { { include "bookcatalog-chart.name" . } }
        app.kubernetes.io/instance: { { .Release.Name } }
    spec:
      containers:
        - name: { { .Chart.Name } }
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: { { toJson .Values.app.command } }
          ports:
            - containerPort: { { .Values.service.port } }
      readinessProbe:
        httpGet:
          path: /api/health/
          port: { { .Values.service.port } }
        initialDelaySeconds: 5
        periodSeconds: 10

      livenessProbe:
        httpGet:
          path: /api/health/
          port: { { .Values.service.port } }
        initialDelaySeconds: 15
        periodSeconds: 20
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi