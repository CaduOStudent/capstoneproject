# .github/workflows/chart-testing.yml
on:
  workflow_call:
    inputs:
      chart-path:
        description: "Path to the Helm chart directory"
        required: true
        type: string
      helm-version:
        description: "Helm CLI version"
        required: false
        type: string
        default: "v3.14.0"
      ct-version:
        description: "chart-testing CLI version"
        required: false
        type: string
        default: "3.10.0"
      kubeconfig:
        description: "Optional raw kubeconfig YAML (paste your KUBE_CONFIG secret here)"
        required: false
        type: string
        default: ""

jobs:
  lint-and-test:
    name: Lint & Install Helm Chart
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm CLI
        uses: azure/setup-helm@v3
        with:
          version: ${{ inputs.helm-version }}

      - name: Install chart-testing CLI
        run: |
          CT_VER="${{ inputs.ct-version }}"
          curl -sSL \
            "https://github.com/helm/chart-testing/releases/download/v${CT_VER}/chart-testing_${CT_VER}_Linux_x86_64.tar.gz" \
            | tar xz
          sudo mv ct /usr/local/bin/

      - name: Lint Helm chart
        run: ct lint --charts "${{ inputs.chart-path }}"

      - name: Write out provided kubeconfig
        if: ${{ inputs.kubeconfig != '' }}
        run: echo "${{ inputs.kubeconfig }}" > kubeconfig

      - name: Create Kind cluster (if no config given)
        if: ${{ inputs.kubeconfig == '' }}
        uses: engineerd/setup-kind@v0.6.1
        with:
          version: v0.17.0
          cluster: ct-test

      - name: Export KUBECONFIG
        run: |
          if [ -n "${{ inputs.kubeconfig }}" ]; then
            echo "Using provided kubeconfig"
            export KUBECONFIG="$PWD/kubeconfig"
          else
            echo "Using Kind's kubeconfig"
            export KUBECONFIG="${HOME}/.kube/config"
          fi
        shell: bash

      - name: Install chart in test namespace
        run: |
          NAMESPACE="ct-test-${{ github.sha }}"
          kubectl create namespace "${NAMESPACE}" \
            --dry-run=client -o yaml | kubectl apply -f -
          ct install \
            --charts "${{ inputs.chart-path }}" \
            --namespace "${NAMESPACE}" \
            --skip-cleanup